# This taskbook is exactly indentical to the JSON version, but using YAML payload.
# The aci_rest module simply converts the YAML payload into JSON before sending to the APIC.

# Using YAML as input is convenient when managing the payload e.g. from git.

- name: Push aci_model

  # We prepare an aci_login anchor for convenience
  vars:
    aci_login: &aci_login
      hostname: '{{ apic_host }}'
      username: '{{ apic_username }}'
      password: '{{ apic_password }}'
      use_proxy: '{{ apic_use_proxy }}'
      validate_certs: '{{ apic_validate_certs }}'

  # We define the delegate_to at the block-level
  delegate_to: localhost

  block:
  - name: Create tenants
    aci_tenant:
      <<: *aci_login
      tenant: '{{ item.tenant_name }}'
      description: '{{ item.tenant_description }}'
    with_items: '{{ aci_model_data|aci_listify("tenant") }}'

  - name: Create VRFs
    aci_vrf:
      <<: *aci_login
      tenant: '{{ item.tenant_name }}'
      vrf_name: '{{ item.tenant_vrf_name }}'
    with_items: '{{ aci_model_data|aci_listify("tenant","vrf") }}'

  - name: Create BDs
    aci_bd:
      <<: *aci_login
      tenant: '{{ item.tenant_name }}'
      vrf: '{{ item.tenant_bd_vrf }}'
      bd: '{{ item.tenant_bd_name }}'
      enable_routing: yes
    with_items: '{{ aci_model_data|aci_listify("tenant","bd") }}'

  - name: Create BD subnets
    aci_bd_subnet:
      <<: *aci_login
      tenant: '{{ item.tenant_name }}'
      bd: '{{ item.tenant_bd_name }}'
      gateway: '{{ item.tenant_bd_subnet_name }}'
      mask: '{{ item.tenant_bd_subnet_mask }}'
      scope: '{{ item.tenant_bd_subnet_scope }}'
    with_items: '{{ aci_model_data|aci_listify("tenant","bd","subnet") }}'

  - name: Create APs
    aci_ap:
      <<: *aci_login
      tenant: '{{ item.tenant_name }}'
      app_profile: '{{ item.tenant_app_name }}'
    with_items: '{{ aci_model_data|aci_listify("tenant","app") }}'

  - name: Create EPGs
    aci_epg:
      <<: *aci_login
      tenant: '{{ item.tenant_name }}'
      app_profile: '{{ item.tenant_app_name }}'
      epg: '{{ item.tenant_app_epg_name }}'
      bd: '{{ item.tenant_app_epg_bd }}'
    with_items: '{{ aci_model_data|aci_listify("tenant","app","epg") }}'

  - name: Pausing
    pause:
      seconds: 2

  - name: Create contracts
    aci_contract:
      <<: *aci_login
      tenant: '{{ item.tenant_name }}'
      contract: '{{ item.tenant_contract_name }}'
      scope: '{{ item.tenant_contract_scope }}'
    with_items: '{{ aci_model_data|aci_listify("tenant","contract") }}'

  - name: Create contract subjects
    aci_contract_subject:
      <<: *aci_login
      tenant: '{{ item.tenant_name }}'
      contract: '{{ item.tenant_contract_name }}'
      contract_subject: '{{ item.tenant_contract_subject_name }}'
      reverse_filter: yes
    with_items: '{{ aci_model_data|aci_listify("tenant","contract","subject") }}'

  - name: Create contract filters
    aci_filter:
      <<: *aci_login
      tenant: '{{ item.tenant_name }}'
      filter: '{{ item.tenant_filters_filter }}'
    with_items: '{{ aci_model_data|aci_listify("tenant","filters") }}'

  - name: Bind filter entry to filters	
    aci_filter_entry:
      <<: *aci_login
      tenant: '{{ item.tenant_name }}'
      entry: '{{ item.tenant_filters_entry }}'
      ether_type: '{{ item.tenant_filters_ether_type }}'
      ip_protocol: '{{ item.tenant_filters_ip_protocol }}'
      filter: '{{ item.tenant_filters_filter }}'
    with_items: '{{ aci_model_data|aci_listify("tenant","filters") }}'

  - name: Bind contract subjects to filters
    aci_contract_subject_to_filter:
      <<: *aci_login
      tenant: '{{ item.tenant_name }}'
      contract: '{{ item.tenant_contract_name }}'
      contract_subject: '{{ item.tenant_contract_subject_name }}'
      filter: '{{ item.tenant_contract_subject_filter }}'
    with_items: '{{ aci_model_data|aci_listify("tenant","contract","subject") }}'

  - name: Bind EPGs to contracts
    aci_epg_to_contract:
      <<: *aci_login
      tenant: '{{ item.tenant_name }}'
      app_profile: '{{ item.tenant_app_name }}'
      epg: '{{ item.tenant_app_epg_name }}'
      contract: '{{ item.tenant_app_epg_contract_name }}'
      contract_type: '{{ item.tenant_app_epg_contract_type }}'
    with_items: '{{ aci_model_data|aci_listify("tenant","app","epg","contract") }}'

  - name: Pausing
    pause:
      seconds: 2

  - name: Create Link Level interface policies
    aci_rest:
      <<: *aci_login
      path: /api/node/mo/uni/infra/hintfpol-{{ item.access_policy_interface_policy_link_level_name }}.json
      method: post
      content:
        fabricHIfPol:
            attributes:
              descr: ''
              dn: uni/infra/hintfpol-{{ item.access_policy_interface_policy_link_level_name }}
              name: '{{ item.access_policy_interface_policy_link_level_name }}'
              speed: '{{ item.access_policy_interface_policy_link_level_speed }}'
              autoNeg: 'on'
              ownerKey: ''
              ownerTag: ''
    with_items: '{{ aci_model_data|aci_listify("access_policy","interface_policy_link_level") }}'

  - name: Create CDP interface policies
    aci_interface_policy_cdp:
      <<: *aci_login
      cdp_policy: '{{ item.access_policy_interface_policy_cdp_name }}'
      admin_state: '{{ item.access_policy_interface_policy_cdp_admin_state }}'
    with_items: '{{ aci_model_data|aci_listify("access_policy","interface_policy_cdp") }}'

  - name: Create LLDP interface policies
    aci_intf_policy_lldp:
      <<: *aci_login
      lldp_policy: '{{ item.access_policy_interface_policy_lldp_name }}'
      receive_state: '{{ item.access_policy_interface_policy_lldp_receive_state }}'
      transmit_state: '{{ item.access_policy_interface_policy_lldp_transmit_state }}'
    with_items: '{{ aci_model_data|aci_listify("access_policy","interface_policy_lldp") }}'

  - name: Create port channel policies
    aci_intf_policy_port_channel:
      <<: *aci_login
      port_channel: '{{ item.access_policy_interface_policy_port_channel_name }}'
      mode: '{{ item.access_policy_interface_policy_port_channel_mode }}'
    with_items: '{{ aci_model_data|aci_listify("access_policy","interface_policy_port_channel") }}'

  - name: Create interface policy group PC Interface
    aci_rest:
      <<: *aci_login
      path: /api/node/mo/uni/infra/funcprof/accbundle-{{ item.access_policy_interface_policy_policy_group_pc_name }}.json
      method: post
      content:
        infraAccBndlGrp:
          attributes:
            descr: ''
            dn: uni/infra/funcprof/accbundle-{{ item.access_policy_interface_policy_policy_group_pc_name }}
            lagT: node
            name: '{{ item.access_policy_interface_policy_policy_group_pc_name }}'
            ownerKey: ''
            ownerTag: ''
          children:
          - infraRsL2IfPol:
              attributes:
                tnL2IfPolName: ''
          - infraRsHIfPol:
              attributes:
                tnFabricHIfPolName: '{{ item.access_policy_interface_policy_policy_group_pc_link_level }}'
          - infraRsL2PortSecurityPol:
              attributes:
                tnL2PortSecurityPolName: ''
          - infraRsQosPfcIfPol:
              attributes:
                tnQosPfcIfPolName: ''
          - infraRsMonIfInfraPol:
              attributes:
                tnMonInfraPolName: ''
          - infraRsStpIfPol:
              attributes:
                tnStpIfPolName: ''
          - infraRsQosSdIfPol:
              attributes:
                tnQosSdIfPolName: ''
          - infraRsAttEntP:
              attributes:
                tDn: uni/infra/attentp-{{ item.access_policy_interface_policy_policy_group_pc_aep }}
          - infraRsMcpIfPol:
              attributes:
                tnMcpIfPolName: ''
          - infraRsLacpPol:
              attributes:
                tnLacpLagPolName: '{{ item.access_policy_interface_policy_policy_group_pc_port_channel }}'
          - infraRsQosDppIfPol:
              attributes:
                tnQosDppPolName: ''
          - infraRsQosIngressDppIfPol:
              attributes:
                tnQosDppPolName: ''
          - infraRsQosEgressDppIfPol:
              attributes:
                tnQosDppPolName: ''
          - infraRsStormctrlIfPol:
              attributes:
                tnStormctrlIfPolName: ''
          - infraRsLldpIfPol:
              attributes:
                tnLldpIfPolName: '{{ item.access_policy_interface_policy_policy_group_pc_lldp }}'
          - infraRsFcIfPol:
              attributes:
                tnFcIfPolName: ''
          - infraRsCdpIfPol:
              attributes:
                tnCdpIfPolName: '{{ item.access_policy_interface_policy_policy_group_pc_cdp }}'
    with_items: '{{ aci_model_data|aci_listify("access_policy","interface_policy_policy_group_pc") }}'

  - name: Create interface policy group VPCs
    aci_rest:
      <<: *aci_login
      path: /api/node/mo/uni/infra/funcprof/accbundle-{{ item.access_policy_interface_policy_policy_group_vpc_name }}.json
      method: post
      content:
        infraAccBndlGrp:
          attributes:
            descr: ''
            dn: uni/infra/funcprof/accbundle-{{ item.access_policy_interface_policy_policy_group_vpc_name }}
            lagT: node
            name: '{{ item.access_policy_interface_policy_policy_group_vpc_name }}'
            ownerKey: ''
            ownerTag: ''
          children:
          - infraRsL2IfPol:
              attributes:
                tnL2IfPolName: ''
          - infraRsHIfPol:
              attributes:
                tnFabricHIfPolName: '{{ item.access_policy_interface_policy_policy_group_vpc_link_level }}'
          - infraRsL2PortSecurityPol:
              attributes:
                tnL2PortSecurityPolName: ''
          - infraRsQosPfcIfPol:
              attributes:
                tnQosPfcIfPolName: ''
          - infraRsMonIfInfraPol:
              attributes:
                tnMonInfraPolName: ''
          - infraRsStpIfPol:
              attributes:
                tnStpIfPolName: ''
          - infraRsQosSdIfPol:
              attributes:
                tnQosSdIfPolName: ''
          - infraRsAttEntP:
              attributes:
                tDn: uni/infra/attentp-{{ item.access_policy_interface_policy_policy_group_vpc_aep }}
          - infraRsMcpIfPol:
              attributes:
                tnMcpIfPolName: ''
          - infraRsLacpPol:
              attributes:
                tnLacpLagPolName: '{{ item.access_policy_interface_policy_policy_group_vpc_port_channel }}'
          - infraRsQosDppIfPol:
              attributes:
                tnQosDppPolName: ''
          - infraRsQosIngressDppIfPol:
              attributes:
                tnQosDppPolName: ''
          - infraRsQosEgressDppIfPol:
              attributes:
                tnQosDppPolName: ''
          - infraRsStormctrlIfPol:
              attributes:
                tnStormctrlIfPolName: ''
          - infraRsLldpIfPol:
              attributes:
                tnLldpIfPolName: '{{ item.access_policy_interface_policy_policy_group_vpc_lldp }}'
          - infraRsFcIfPol:
              attributes:
                tnFcIfPolName: ''
          - infraRsCdpIfPol:
              attributes:
                tnCdpIfPolName: ''
    with_items: '{{ aci_model_data|aci_listify("access_policy","interface_policy_policy_group_vpc") }}'

  - name: Pausing
    pause:
      seconds: 2

  - name: Create VLAN pools
    aci_rest:
      <<: *aci_login
      path: /api/node/mo/uni/infra/vlanns-[{{ item.access_policy_vlan_pool_name }}]-{{ item.access_policy_vlan_pool_alloc }}.json
      method: post
      content:
        fvnsVlanInstP:
          attributes:
            allocMode: '{{ item.access_policy_vlan_pool_alloc }}'
            descr: ''
            dn: uni/infra/vlanns-[{{ item.access_policy_vlan_pool_name }}]-{{ item.access_policy_vlan_pool_alloc }}
            name: '{{ item.access_policy_vlan_pool_name }}'
            ownerKey: ''
            ownerTag: ''
    with_items: '{{ aci_model_data|aci_listify("access_policy","vlan_pool") }}'

  - name: Bind encaps to VLAN pools
    aci_rest:
      <<: *aci_login
      path: /api/node/mo/uni/infra/vlanns-[{{ item.access_policy_vlan_pool_name }}]-{{ item.access_policy_vlan_pool_alloc }}.json
      method: post
      content:
        fvnsVlanInstP:
          attributes:
            allocMode: '{{ item.access_policy_vlan_pool_alloc }}'
            descr: ''
            dn: uni/infra/vlanns-[{{ item.access_policy_vlan_pool_name }}]-{{ item.access_policy_vlan_pool_alloc }}
            name: '{{ item.access_policy_vlan_pool_name }}'
            ownerKey: ''
            ownerTag: ''
          children:
          - fvnsEncapBlk:
              attributes:
                allocMode: inherit
                descr: ''
                from: vlan-{{ item.access_policy_vlan_pool_encap_block_from }}
                name: ''
                to: vlan-{{ item.access_policy_vlan_pool_encap_block_to }}
    with_items: '{{ aci_model_data|aci_listify("access_policy","vlan_pool","encap_block") }}'

  - name: Create AEPs
    aci_rest:
      <<: *aci_login
      path: /api/node/mo/uni/infra.json
      method: post
      content:
        infraAttEntityP:
          attributes:
            descr: ''
            dn: uni/infra/attentp-{{ item.access_policy_aep_name }}
            name: '{{ item.access_policy_aep_name }}'
            ownerKey: ''
            ownerTag: ''
    with_items: '{{ aci_model_data|aci_listify("access_policy","aep") }}'

  - name: Create physical domains
    aci_rest:
      <<: *aci_login
      path: /api/node/mo/uni/phys-{{ item.access_policy_physical_domain_name }}.json
      method: post
      content:
        physDomP:
          attributes:
            dn: uni/phys-{{ item.access_policy_physical_domain_name }}
            name: '{{ item.access_policy_physical_domain_name }}'
            ownerKey: ''
            ownerTag: ''
          children:
            - infraRsVlanNs:
                attributes:
                  tDn: uni/infra/vlanns-[{{ item.access_policy_physical_domain_vlan_pool }}]-{{ item.access_policy_physical_domain_vlan_pool_alloc }}
    with_items: '{{ aci_model_data|aci_listify("access_policy","physical_domain") }}'

  - name: Bind AEPs to Physical domains
    aci_rest:
      <<: *aci_login
      path: /api/node/mo/uni/infra/attentp-{{ item.access_policy_aep_name }}.json
      method: post
      content:
        infraRsDomP:
          attributes:
            tDn: uni/phys-{{item.access_policy_aep_domain_name }}
    with_items: '{{ aci_model_data|aci_listify("access_policy","aep", "domain") }}'

  - name: Create External Domain - L2
    aci_rest:
      <<: *aci_login
      path: /api/node/mo/uni/l2dom-{{ item.access_policy_external_bridged_domain_name }}.json
      method: post
      content:
        l2extDomP:
          attributes:
            dn: uni/l2dom-{{ item.access_policy_external_bridged_domain_name }}
            name: '{{ item.access_policy_external_bridged_domain_name }}'
            ownerKey: ''
            ownerTag: ''
          children:
            - infraRsVlanNs:
                attributes:
                  tDn: uni/infra/vlanns-[{{ item.access_policy_external_bridged_domain_vlan_pool }}]-{{ item.access_policy_external_bridged_domain_vlan_pool_alloc }}
    with_items: '{{ aci_model_data|aci_listify("access_policy","external_bridged_domain") }}'

  - name: Pausing
    pause:
      seconds: 2

  - name: Bind AEPs to External Domain - L2
    aci_rest:
      <<: *aci_login
      path: /api/node/mo/uni/infra/attentp-{{ item.access_policy_aep_name }}.json
      method: post
      content:
        infraRsDomP:
          attributes:
            tDn: uni/l2dom-{{item.access_policy_aep_l2domain_name }}
    with_items: '{{ aci_model_data|aci_listify("access_policy","aep","l2domain") }}'

  - name: Create External Domain - L3
    aci_rest:
      <<: *aci_login
      path: /api/node/mo/uni/l3dom-{{ item.access_policy_external_routed_domain_name }}.json
      method: post
      content:
        l3extDomP:
          attributes:
            dn: uni/l3dom-{{ item.access_policy_external_routed_domain_name }}
            name: '{{ item.access_policy_external_routed_domain_name }}'
            ownerKey: ''
            ownerTag: ''
          children:
            - infraRsVlanNs:
                attributes:
                  tDn: uni/infra/vlanns-[{{ item.access_policy_external_routed_domain_vlan_pool }}]-{{ item.access_policy_external_routed_domain_vlan_pool_alloc }}
    with_items: '{{ aci_model_data|aci_listify("access_policy","external_routed_domain") }}'

  - name: Bind AEPs to External Domain - L3
    aci_rest:
      <<: *aci_login
      path: /api/node/mo/uni/infra/attentp-{{ item.access_policy_aep_name }}.json
      method: post
      content:
        infraRsDomP:
          attributes:
            tDn: uni/l2dom-{{item.access_policy_aep_l3domain_name }}
    with_items: '{{ aci_model_data|aci_listify("access_policy","aep","l3domain") }}'

  - name: Create static paths
    aci_rest:
      <<: *aci_login
      path: /api/node/mo/uni/tn-{{ item.tenant_name }}/ap-{{ item.tenant_app_name }}/epg-{{ item.tenant_app_epg_name }}.json
      method: post
      content:
        fvRsPathAtt:
          attributes:
            descr: ''
            dn: uni/tn-{{ item.tenant_name }}/ap-{{ item.tenant_app_name }}/epg-{{ item.tenant_app_epg_name }}/rspathAtt-[{{ item.tenant_app_epg_static_path_path }}]
            encap: '{{ item.tenant_app_epg_static_path_encap }}'
            instrImedcy: lazy
            mode: '{{ item.tenant_app_epg_static_path_mode }}'
            primaryEncap: unknown
            tDn: '{{ item.tenant_app_epg_static_path_path }}'
    with_items: '{{ aci_model_data|aci_listify("tenant","app","epg","static_path") }}'

  - name: Create VPC domain	
    aci_rest:
      <<: *aci_login
      path: /api/node/mo/uni/fabric/vpcInst-{{ item.access_policy_switch_policy_vpc_domain_name }}.json
      method: post
      content:
        vpcInstPol:
          attributes:
            dn: uni/fabric/vpcInst-{{ item.access_policy_switch_policy_vpc_domain_name }}
            name: '{{ item.access_policy_switch_policy_vpc_domain_name }}'
            rn: vpcInst-{{ item.access_policy_switch_policy_vpc_domain_name }}
    with_items: '{{ aci_model_data|aci_listify("access_policy","switch_policy_vpc_domain") }}'

  - name: Pausing
    pause:
      seconds: 2

  - name: Create virtual port channels
    aci_rest:
      <<: *aci_login
      path: /api/node/mo/uni/fabric/protpol/expgep-{{ item.access_policy_switch_policy_virtual_port_channel_name }}.json
      method: post
      content:
        fabricExplicitGEp:
          attributes:
            dn: uni/fabric/protpol/expgep-{{ item.access_policy_switch_policy_virtual_port_channel_name }}
            name: '{{ item.access_policy_switch_policy_virtual_port_channel_name }}'
            id: '{{ item.access_policy_switch_policy_virtual_port_channel_id }}'
            rn: expgep-{{ item.access_policy_switch_policy_virtual_port_channel_name }}
          children:
          - fabricNodePEp:
              attributes:
                dn: uni/fabric/protpol/expgep-{{ item.access_policy_switch_policy_virtual_port_channel_name }}/nodepep-{{ item.access_policy_switch_policy_virtual_port_channel_switch1 }}
                id: '{{ item.access_policy_switch_policy_virtual_port_channel_switch1 }}'
                rn: nodepep-{{ item.access_policy_switch_policy_virtual_port_channel_switch1 }}
          - fabricNodePEp:
              attributes:
                dn: uni/fabric/protpol/expgep-{{ item.access_policy_switch_policy_virtual_port_channel_name }}/nodepep-{{ item.access_policy_switch_policy_virtual_port_channel_switch2 }}
                id: '{{ item.access_policy_switch_policy_virtual_port_channel_switch2 }}'
                rn: nodepep-{{ item.access_policy_switch_policy_virtual_port_channel_switch2 }}
          - fabricRsVpcInstPol:
              attributes:
                tnVpcInstPolName: '{{ item.access_policy_switch_policy_virtual_port_channel_domainpolicy }}'
    with_items: '{{ aci_model_data|aci_listify("access_policy","switch_policy_virtual_port_channel") }}'

  - name: Bind EPGs to domains
    aci_epg_to_domain:
      <<: *aci_login
      tenant: '{{ item.tenant_name }}'
      app_profile: '{{ item.tenant_app_name }}'
      epg: '{{ item.tenant_app_epg_name }}'
      domain: '{{ item.tenant_app_epg_domain_name }}'
      domain_type: '{{ item.tenant_app_epg_domain_type }}'
    with_items: '{{ aci_model_data|aci_listify("tenant","app","epg","domain") }}'

  - name: Create switch policy profiles
    aci_rest:
      <<: *aci_login
      path: /api/node/mo/uni/infra/nprof-{{ item.access_policy_switch_policy_profile_name }}.json
      method: post
      content:
        infraNodeP:
          attributes:
            descr: ''
            dn: uni/infra/nprof-{{item.access_policy_switch_policy_profile_name }}
            name: '{{ item.access_policy_switch_policy_profile_name }}'
            ownerKey: ''
            ownerTag: ''
    with_items: '{{ aci_model_data|aci_listify("access_policy","switch_policy_profile") }}'

  - name: Bind leaf selectors to switch policy profiles
    aci_rest:
      <<: *aci_login
      path: /api/node/mo/uni/infra/nprof-{{ item.access_policy_switch_policy_profile_name }}.json
      method: post
      content:
        infraNodeP:
          attributes:
            descr: ''
            dn: uni/infra/nprof-{{ item.access_policy_switch_policy_profile_name }}
            name: '{{ item.access_policy_switch_policy_profile_name }}'
            ownerKey: ''
            ownerTag: ''
          children:
          - infraLeafS:
              attributes:
                descr: ''
                name: '{{ item.access_policy_switch_policy_profile_leaf_selector_name }}'
                ownerKey: ''
                ownerTag: ''
                type: range
              children:
              - infraNodeBlk:
                  attributes:
                    descr: ''
                    from_ : '{{ item.access_policy_switch_policy_profile_leaf_selector_from }}'
                    name: '{{ item.access_policy_switch_policy_profile_leaf_selector_name }}'
                    to_ : '{{ item.access_policy_switch_policy_profile_leaf_selector_to }}'
    with_items: '{{ aci_model_data|aci_listify("access_policy","switch_policy_profile","leaf_selector") }}'

  - name: Bind interface selector profiles to switch policy profiles
    aci_rest:
      <<: *aci_login
      path: /api/node/mo/uni/infra/nprof-{{ item.access_policy_switch_policy_profile_name }}.json
      method: post
      content:
        infraNodeP:
          attributes:
            descr: ''
            dn: uni/infra/nprof-{{ item.access_policy_switch_policy_profile_name }}
            name: '{{ item.access_policy_switch_policy_profile_name }}'
            ownerKey: ''
            ownerTag: ''
          children:
          - infraRsAccPortP:
              attributes:
                tDn: uni/infra/accportprof-{{ item.access_policy_switch_policy_profile_interface_selector_profile_name }}
    with_items: '{{ aci_model_data|aci_listify("access_policy","switch_policy_profile","interface_selector_profile") }}'

  - name: Create interface policy profiles
    aci_rest:
      <<: *aci_login
      path: /api/node/mo/uni/infra/accportprof-{{ item.access_policy_interface_policy_profile_name }}.json
      method: post
      content:
        infraAccPortP:
          attributes:
            descr: ''
            dn: uni/infra/accportprof-{{ item.access_policy_interface_policy_profile_name }}
            name: '{{ item.access_policy_interface_policy_profile_name }}'
            ownerKey: ''
            ownerTag: ''
    with_items: '{{ aci_model_data|aci_listify("access_policy","interface_policy_profile") }}'

  - name: Bind interface selector to interface policy profiles
    aci_rest:
      <<: *aci_login
      path: /api/node/mo/uni/infra/accportprof-{{ item.access_policy_interface_policy_profile_name }}.json
      method: post
      content:
        infraAccPortP:
          attributes:
            descr: ''
            dn: uni/infra/accportprof-{{ item.access_policy_interface_policy_profile_name }}
            name: '{{ item.access_policy_interface_policy_profile_name }}'
            ownerKey: ''
            ownerTag: ''
          children:
          - infraHPortS:
              attributes:
                descr: ''
                name: '{{ item.access_policy_interface_policy_profile_interface_selector_name }}'
                ownerKey: ''
                ownerTag: ''
                type: range
              children:
              - infraRsAccBaseGrp:
                  attributes:
                    fexId: '101'
                    tDn: uni/infra/funcprof/accbundle-{{ item.access_policy_interface_policy_profile_interface_selector_policy_group }}
              - infraPortBlk:
                  attributes:
                    descr: ''
                    fromCard: '{{ item.access_policy_interface_policy_profile_interface_selector_int_card }}'
                    fromPort: '{{ item.access_policy_interface_policy_profile_interface_selector_int_from }}'
                    name: block2
                    toCard: '{{ item.access_policy_interface_policy_profile_interface_selector_int_card }}'
                    toPort: '{{ item.access_policy_interface_policy_profile_interface_selector_int_to }}'
    with_items: '{{ aci_model_data|aci_listify("access_policy","interface_policy_profile","interface_selector") }}'

  - name: Pausing
    pause:
      seconds: 2

  - name: Create L2 Out
    aci_rest:
      <<: *aci_login
      path: /api/node/mo/uni/tn-{{ item.tenant_name }}/l2out-{{ item.tenant_external_bridged_network_name }}.json
      method: post
      content:
        l2extOut:
          attributes:
            descr: ''
            dn: uni/tn-{{ item.tenant_name }}/l2out-{{ item.tenant_external_bridged_network_name }}
            name: '{{ item.tenant_external_bridged_network_name }}'
            ownerKey: ''
            ownerTag: ''
          children:
          - l2extInstP:
              attributes:
                descr: ''
                dn: uni/tn-{{ item.tenant_name }}/l2out-{{ item.tenant_external_bridged_network_name }}/instP-{{ item.tenant_external_bridged_network_epg_name }}
                name: '{{ item.tenant_external_bridged_network_epg_name }}'		  
          - l2extRsL2DomAtt:
              attributes:
                tDn: uni/l2dom-{{item.tenant_external_bridged_network_external_bridged_domain}}
          - l2extRsEBd:
              attributes:
                tnFvBDName : '{{item.tenant_external_bridged_network_bd}}'
                encap: '{{ item.tenant_external_bridged_network_encap }}'
    with_items: '{{ aci_model_data|aci_listify("tenant","external_bridged_network","epg") }}'

  - name: Create L2 Out Node Profile 
    aci_rest:
      <<: *aci_login
      path: /api/node/mo/uni/tn-{{ item.tenant_name }}/l2out-{{ item.tenant_external_bridged_network_name }}/lnodep-{{ item.tenant_external_bridged_network_node_profile_name }}.json
      method: post
      content:
        l2extLNodeP:
          attributes:
            descr: ''
            dn: uni/tn-{{ item.tenant_name }}/l2out-{{ item.tenant_external_bridged_network_name }}/lnodep-{{ item.tenant_external_bridged_network_node_profile_name }}
            name: '{{ item.tenant_external_bridged_network_node_profile_name }}'
            ownerKey: ''
            ownerTag: ''			
    with_items: '{{ aci_model_data|aci_listify("tenant","external_bridged_network","node_profile") }}'	

  - name: Create L2 Out Interface Profile 
    aci_rest:
      <<: *aci_login
      path: /api/node/mo/uni/tn-{{ item.tenant_name }}/l2out-{{ item.tenant_external_bridged_network_name }}/lnodep-{{ item.tenant_external_bridged_network_node_profile_name }}/lifp-{{ item.tenant_external_bridged_network_node_profile_interface_profile_name }}.json
      method: post
      content:
        l2extLIfP:
          attributes:
            descr: ''
            dn: uni/tn-{{ item.tenant_name }}/l2out-{{ item.tenant_external_bridged_network_name }}/lnodep-{{ item.tenant_external_bridged_network_node_profile_name }}/lifp-{{ item.tenant_external_bridged_network_node_profile_interface_profile_name }}
            name: '{{ item.tenant_external_bridged_network_node_profile_interface_profile_name }}'
            ownerKey: ''
            ownerTag: ''			
    with_items: '{{ aci_model_data|aci_listify("tenant","external_bridged_network","node_profile","interface_profile") }}'	

  - name: Bind Interface Path to L2 Out Interface Profile
    aci_rest:
      <<: *aci_login
      path: /api/node/mo/uni/tn-{{ item.tenant_name }}/l2out-{{ item.tenant_external_bridged_network_name }}/lnodep-{{ item.tenant_external_bridged_network_node_profile_name }}/lifp-{{ item.tenant_external_bridged_network_node_profile_interface_profile_name }}.json
      method: post
      content:
        l2extRsPathL2OutAtt:
          attributes:
            tDn: '{{ item.tenant_external_bridged_network_node_profile_interface_profile_static_path_path }}'
    with_items: '{{ aci_model_data|aci_listify("tenant","external_bridged_network","node_profile","interface_profile","static_path") }}'

  - name: Bind Provider Contract to L2 Out EPG
    aci_rest:
      <<: *aci_login
      path: /api/node/mo/uni/tn-{{ item.tenant_name }}/l2out-{{ item.tenant_external_bridged_network_name }}/instP-{{ item.tenant_external_bridged_network_epg_name }}.json
      method: post
      content:
        fvRsProv:
          attributes:
            tnVzBrCPName: '{{ item.tenant_external_bridged_network_epg_associate_contracts_name }}'
    with_items: '{{ aci_model_data|aci_listify("tenant","external_bridged_network","epg","contract") }}'

  - name: Bind Consumer Contract to L2 Out EPG
    aci_rest:
      <<: *aci_login
      path: /api/node/mo/uni/tn-{{ item.tenant_name }}/l2out-{{ item.tenant_external_bridged_network_name }}/instP-{{ item.tenant_external_bridged_network_epg_name }}.json
      method: post
      content:
        fvRsCons:
          attributes:
            tnVzBrCPName: '{{ item.tenant_external_bridged_network_epg_associate_contracts_name }}'
    with_items: '{{ aci_model_data|aci_listify("tenant","external_bridged_network","epg","contract") }}'

  - name: Pausing
    pause:
      seconds: 2

  - name: Create L3 out
    aci_rest:
      <<: *aci_login
      path: /api/node/mo/uni/tn-{{ item.tenant_name }}/out-{{ item.tenant_external_routed_network_name }}.json
      method: post
      content:
        l3extOut: #external routed network object
          attributes:
            dn: uni/tn-{{ item.tenant_name }}/out-{{ item.tenant_external_routed_network_name }}
            name: '{{ item.tenant_external_routed_network_name }}'
          children:
            - l3extInstP:
                attributes:
                  descr: ''
                  dn: uni/tn-{{ item.tenant_name }}/out-{{ item.tenant_external_routed_network_name }}/instP-{{ item.tenant_external_routed_network_epg_name }}
                  name: '{{ item.tenant_external_routed_network_epg_name }}'
            - l3extRsEctx:
                attributes:
                  tnFvCtxName: '{{ item.tenant_external_routed_network_vrf }}'
            - l3extRsL3DomAtt:
                attributes:
                  tDn: uni/l3dom-{{ item.tenant_external_routed_network_external_routed_domain }}
    with_items: '{{ aci_model_data|aci_listify("tenant","external_routed_network","epg") }}'

  - name: Bind Provider Contract to L3 Out EPG
    aci_rest:
      <<: *aci_login
      path: /api/node/mo/uni/tn-{{ item.tenant_name }}/out-{{ item.tenant_external_routed_network_name }}/instP-{{ item.tenant_external_routed_network_epg_name }}.json
      method: post
      content:
        fvRsProv:
          attributes:
            tnVzBrCPName: '{{ item.tenant_external_routed_network_epg_associate_contracts_name }}'
    with_items: '{{ aci_model_data|aci_listify("tenant","external_routed_network","epg","associate_contracts") }}'

  - name: Bind Consumer Contract to L3 Out EPG
    aci_rest:
      <<: *aci_login
      path: /api/node/mo/uni/tn-{{ item.tenant_name }}/out-{{ item.tenant_external_routed_network_name }}/instP-{{ item.tenant_external_routed_network_epg_name }}.json
      method: post
      content:
        fvRsCons:
          attributes:
            tnVzBrCPName: '{{ item.tenant_external_routed_network_epg_associate_contracts_name }}'
    with_items: '{{ aci_model_data|aci_listify("tenant","external_routed_network","epg","associate_contracts") }}'

  - name: Add Subnets to L3 Out EPG
    aci_rest:
      <<: *aci_login
      path: /api/node/mo/uni/tn-{{ item.tenant_name }}/out-{{ item.tenant_external_routed_network_name }}/instP-{{ item.tenant_external_routed_network_epg_name }}/extsubnet-[{{item.tenant_external_routed_network_epg_subnets_ip}}/{{item.tenant_external_routed_network_epg_subnets_mask}}].json
      method: post
      content:
        l3extSubnet:
           attributes:
              descr: ''		  
              dn: uni/tn-{{ item.tenant_name }}/out-{{ item.tenant_external_routed_network_name }}/instP-{{ item.tenant_external_routed_network_epg_name }}/extsubnet-[{{item.tenant_external_routed_network_epg_subnets_ip}}/{{item.tenant_external_routed_network_epg_subnets_mask}}]
              ip: '{{item.tenant_external_routed_network_epg_subnets_ip}}/{{item.tenant_external_routed_network_epg_subnets_mask}}'
              scope: '{{item.tenant_external_routed_network_epg_subnets_scope}}'				 
              aggregate: '{{ item.tenant_external_routed_network_epg_subnets_aggregate }}'
    with_items: '{{ aci_model_data|aci_listify("tenant","external_routed_network","epg","subnets") }}'

  - name: Create L3 Out Logical Node Profile 
    aci_rest:
      <<: *aci_login
      path: /api/node/mo/uni/tn-{{ item.tenant_name }}/out-{{ item.tenant_external_routed_network_name }}/lnodep-{{ item.tenant_external_routed_network_logical_node_profile_name }}.json
      method: post
      content:
        l3extLNodeP:
          attributes:
            descr: ''
            dn: uni/tn-{{ item.tenant_name }}/out-{{ item.tenant_external_routed_network_name }}/lnodep-{{ item.tenant_external_routed_network_logical_node_profile_name }}
            name: '{{ item.tenant_external_routed_network_logical_node_profile_name }}'
            ownerKey: ''
            ownerTag: ''
          children:
          - l3extRsNodeL3OutAtt:
              attributes:
                dn: uni/tn-{{item.tenant_name}}/out-{{item.tenant_external_routed_network_name}}/lnodep-{{item.tenant_external_routed_network_logical_node_profile_name}}/rsnodeL3OutAtt-[{{item.tenant_external_routed_network_logical_node_profile_node_name}}] 
                rtrId: "{{item.tenant_external_routed_network_logical_node_profile_node_routeid}}" # Router ID
                rtrIdLoopBack: "{{item.tenant_external_routed_network_logical_node_profile_node_rtrIdLoopBack}}" ## Router Loopback
                tDn: "{{item.tenant_external_routed_network_logical_node_profile_node_name}}"
              children:
              - l3extInfraNodeP:
                    attributes:
                      fabricExtCtrlPeering: "false"					  
              - ipRouteP: #IP route object
                  attributes:
                     descr: ''					  
                     name: ''					  
                     ip: "{{ item.tenant_external_routed_network_logical_node_profile_node_static_route }}/{{ item.tenant_external_routed_network_logical_node_profile_node_static_route_mask }}" # static route's subnet 
                  children:
                  - ipNexthopP:
                      attributes:
                        descr: ''					  
                        name: ''						
                        nhAddr: "{{ item.tenant_external_routed_network_logical_node_profile_node_static_route_nh }}" #route's next hop's address
                        pref: "unspecified"
    with_items: '{{ aci_model_data|aci_listify("tenant","external_routed_network","logical_node_profile","node") }}'

  - name: Pausing
    pause:
      seconds: 2

  - name: Create L3 Out Logical Interface Profile
    aci_rest:
      <<: *aci_login
      path: /api/node/mo/uni/tn-{{ item.tenant_name }}/out-{{ item.tenant_external_routed_network_name }}/lnodep-{{ item.tenant_external_routed_network_logical_node_profile_name }}/lifp-{{ item.tenant_external_routed_network_logical_node_profile_interface_name }}.json  # path to the logical node interface profile object
      method: post
      content:
        l3extLIfP:
          attributes:
            descr: ''
            dn: uni/tn-{{ item.tenant_name }}/out-{{ item.tenant_external_routed_network_name }}/lnodep-{{ item.tenant_external_routed_network_logical_node_profile_name }}/lifp-{{ item.tenant_external_routed_network_logical_node_profile_interface_name }}
            name: "{{ item.tenant_external_routed_network_logical_node_profile_interface_name }}"
            ownerKey: ''
            ownerTag: ''
    with_items: '{{ aci_model_data|aci_listify("tenant","external_routed_network","logical_node_profile","interface") }}'

  - name: Add a SVI (switched virtual interface) to the logical interface profile
    aci_rest:
      <<: *aci_login
      path: /api/node/mo/uni/tn-{{ item.tenant_name }}/out-{{ item.tenant_external_routed_network_name }}/lnodep-{{ item.tenant_external_routed_network_logical_node_profile_name }}/lifp-{{ item.tenant_external_routed_network_logical_node_profile_interface_name }}/rspathL3OutAtt-[{{ item.tenant_external_routed_network_logical_node_profile_interface_vpc_path }}].json
      method: post
      content:
        l3extRsPathL3OutAtt: #Interface object
          attributes:
            dn: uni/tn-{{ item.tenant_name }}/out-{{ item.tenant_external_routed_network_name }}/lnodep-{{ item.tenant_external_routed_network_logical_node_profile_name }}/lifp-{{ item.tenant_external_routed_network_logical_node_profile_interface_name }}/rspathL3OutAtt-[{{ item.tenant_external_routed_network_logical_node_profile_interface_vpc_path }}]
            encap: vlan-{{ item.tenant_external_routed_network_logical_node_profile_interface_vlan_id }} #Encapsulation field
            ifInstT: ext-svi #type of interface
            mac: "{{ item.tenant_external_routed_network_logical_node_profile_interface_mac }}" #interface"s mac address field
            tDn: "{{ item.tenant_external_routed_network_logical_node_profile_interface_vpc_path }}"
          children:
          - l3extMember:
              attributes:
                addr: "{{ item.tenant_external_routed_network_logical_node_profile_interface_side_ip }}/{{ item.tenant_external_routed_network_logical_node_profile_interface_side_mask }}" #IP address field
                side: "{{ item.tenant_external_routed_network_logical_node_profile_interface_side_side }}" # side IP field
              children:
                - l3extIp:
                    attributes:
                      addr: "{{ item.tenant_external_routed_network_logical_node_profile_interface_side_secondary }}/{{ item.tenant_external_routed_network_logical_node_profile_interface_side_secmask }}"
                      ipv6Dad: '{{ item.tenant_external_routed_network_logical_node_profile_interface_side_ipv6Dad }}'
    with_items: '{{ aci_model_data|aci_listify("tenant","external_routed_network","logical_node_profile","interface","side") }}'
